{"ast":null,"code":"/* SELECTORS */\nexport const getAllTrips = _ref => {\n  let {\n    trips\n  } = _ref;\n  return trips;\n};\nexport const getFilteredTrips = _ref2 => {\n  let {\n    trips,\n    filters\n  } = _ref2;\n  let output = trips; // filter by search phrase\n\n  if (filters.searchPhrase) {\n    const pattern = new RegExp(filters.searchPhrase, 'i');\n    output = output.filter(trip => pattern.test(trip.name));\n  } // TODO - filter by duration\n  // TODO - filter by tags\n  // TODO - sort by cost descending (most expensive goes first)\n\n\n  return output;\n};\nexport const getTripById = (_ref3, tripId) => {\n  let {\n    trips\n  } = _ref3;\n  const filtered = trips; // TODO - filter trips by tripId\n\n  console.log('filtering trips by tripId:', tripId, filtered);\n  return filtered.length ? filtered[0] : {\n    error: true\n  };\n};\nexport const getTripsForCountry = (_ref4, countryCode) => {\n  let {\n    trips\n  } = _ref4;\n  const filtered = trips; // TODO - filter trips by countryCode\n\n  console.log('filtering trips by countryCode:', countryCode, filtered);\n  return filtered.length ? filtered : [{\n    error: true\n  }];\n};\n/* ACTIONS */\n\n/*\n// action name creator\nconst reducerName = 'trips';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n// action types\n\n\n// action creators\n\n\n// reducer\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    default:\n      return statePart;\n  }\n}\n */","map":{"version":3,"sources":["/Users/sionnapoleszuk/Desktop/travel-agency/src/redux/tripsRedux.js"],"names":["getAllTrips","trips","getFilteredTrips","filters","output","searchPhrase","pattern","RegExp","filter","trip","test","name","getTripById","tripId","filtered","console","log","length","error","getTripsForCountry","countryCode"],"mappings":"AAAA;AAEA,OAAO,MAAMA,WAAW,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SAAaA,KAAb;AAAA,CAApB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,SAAsB;AAAA,MAArB;AAACD,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAqB;AACpD,MAAIC,MAAM,GAAGH,KAAb,CADoD,CAGpD;;AACA,MAAGE,OAAO,CAACE,YAAX,EAAwB;AACtB,UAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAWJ,OAAO,CAACE,YAAnB,EAAiC,GAAjC,CAAhB;AACAD,IAAAA,MAAM,GAAGA,MAAM,CAACI,MAAP,CAAcC,IAAI,IAAIH,OAAO,CAACI,IAAR,CAAaD,IAAI,CAACE,IAAlB,CAAtB,CAAT;AACD,GAPmD,CASpD;AAGA;AAEA;;;AAEA,SAAOP,MAAP;AACD,CAjBM;AAmBP,OAAO,MAAMQ,WAAW,GAAG,QAAUC,MAAV,KAAqB;AAAA,MAApB;AAACZ,IAAAA;AAAD,GAAoB;AAC9C,QAAMa,QAAQ,GAAGb,KAAjB,CAD8C,CAG9C;;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,MAA1C,EAAkDC,QAAlD;AACA,SAAOA,QAAQ,CAACG,MAAT,GAAkBH,QAAQ,CAAC,CAAD,CAA1B,GAAgC;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAvC;AACD,CAPM;AASP,OAAO,MAAMC,kBAAkB,GAAG,QAAUC,WAAV,KAA0B;AAAA,MAAzB;AAACnB,IAAAA;AAAD,GAAyB;AAC1D,QAAMa,QAAQ,GAAGb,KAAjB,CAD0D,CAG1D;;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CI,WAA/C,EAA4DN,QAA5D;AACA,SAAOA,QAAQ,CAACG,MAAT,GAAkBH,QAAlB,GAA6B,CAAC;AAACI,IAAAA,KAAK,EAAE;AAAR,GAAD,CAApC;AACD,CAPM;AASP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* SELECTORS */\n\nexport const getAllTrips = ({trips}) => trips;\n\nexport const getFilteredTrips = ({trips, filters}) => {\n  let output = trips;\n\n  // filter by search phrase\n  if(filters.searchPhrase){\n    const pattern = new RegExp(filters.searchPhrase, 'i');\n    output = output.filter(trip => pattern.test(trip.name));\n  }\n\n  // TODO - filter by duration\n  \n\n  // TODO - filter by tags\n\n  // TODO - sort by cost descending (most expensive goes first)\n\n  return output;\n};\n\nexport const getTripById = ({trips}, tripId) => {\n  const filtered = trips;\n\n  // TODO - filter trips by tripId\n\n  console.log('filtering trips by tripId:', tripId, filtered);\n  return filtered.length ? filtered[0] : {error: true};\n};\n\nexport const getTripsForCountry = ({trips}, countryCode) => {\n  const filtered = trips;\n\n  // TODO - filter trips by countryCode\n\n  console.log('filtering trips by countryCode:', countryCode, filtered);\n  return filtered.length ? filtered : [{error: true}];\n};\n\n/* ACTIONS */\n\n/*\n// action name creator\nconst reducerName = 'trips';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n// action types\n\n\n// action creators\n\n\n// reducer\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    default:\n      return statePart;\n  }\n}\n */\n"]},"metadata":{},"sourceType":"module"}